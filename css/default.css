/* Sticky footer styles
-------------------------------------------------- */

html {
  position: relative;
  min-height: 100%;
}
body {
  /* Margin bottom by footer height */
  margin-bottom: 60px;
  
 /*  background-image: transparent url(../img/loginBackground.jpg) ;
  background-size: 100% 100%;
  background-repeat: no-repeat;
  background-attachment: fixed;  */ 
  
}
.footer {
  position: fixed;
  bottom:0px;
  width: 100%;
  /* clear:both; */
  /* Set the fixed height of the footer here */
  height: 40px;
  background-color: #424040;
}
.nav{
  border-color: #000;
}

#background {
    /* position: fixed; 
    top: 0;
    left: 0;*/
    width: 100%;
    height: 100%;
    background: transparent url(../img/loginBackground.jpg) ;
    /* background-repeat: no-repeat;
    background-attachment: fixed;    
    background-size: 100% 100%; */
  
}
#menubar
{
  height: 40px;  
  margin: 0 auto;
  background: transparent url(../img/menu_pattern.jpg) repeat;
  background-size: 100% 100%;
  border-radius: 15px 15px 15px 15px;
  -moz-border-radius: 15px 15px 15px 15px;
  -webkit-border: 15px 15px 15px 15px;
  -webkit-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  -moz-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;

    color: #000;
  }
  #sensorbar
{
  height: 40px;  
  margin: 0 auto;
  background: transparent url(../img/sensor_pattern.jpg) repeat;
  background-size: 100% 100%;
  border-radius: 15px 15px 15px 15px;
  -moz-border-radius: 15px 15px 15px 15px;
  -webkit-border: 15px 15px 15px 15px;
  -webkit-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  -moz-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;

    color: #000;
  }
.jumbotron 
{
 
  background: transparent url(../img/pattern.jpg) repeat;
  background-size: 100% 100%;
  border-radius: 15px 15px 15px 15px;
  -moz-border-radius: 15px 15px 15px 15px;
  -webkit-border: 15px 15px 15px 15px;
  -webkit-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  -moz-box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;
  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 5px;

    color: #000;
  }  

.container .text-muted {
  margin: 20px 0;
}

.text-center {
  text-align: center;
}
li span {
  float: right;
  cursor: pointer;
}

.fade {
  transition: 1s linear all;
  -webkit-transition: 1s linear all;
}

.fade.ng-enter {
  opacity: 0;
}

.fade.ng-enter.ng-enter-active {
  opacity: 1;
}

.fade.ng-leave {
  opacity: 1;
}

.fade.ng-leave.ng-leave-active {
  opacity: 0;
}
.md-select-menu-container{
  margin-top: 50px;
}

/* google graph zoom buttons customizations */
.google-visualization-atl button {
    
    font-size: 12px;    
    height: 15px;
  }
.google-visualization-atl .zoomControls {
   
    font-size: 12px;
  
}

#_AnnotationChart_zoomControlContainer{
  display : block;
}
.legend{
  float:right;
}
/*hiding google charts zoom options buttons*/
#_AnnotationChart_zoomControlContainer_5-days,
/* #_AnnotationChart_zoomControlContainer_1-hour, */
#_AnnotationChart_zoomControlContainer_3-months,
/* #_AnnotationChart_zoomControlContainer_max, */
_AnnotationChart_zoomControlContainer_1-year
 {
    display: none;
}

/* rotatin graph labels */
#tempLabel {
  -webkit-transform: rotate(90deg);
    -moz-transform: rotate(90deg);
    -o-transform: rotate(90deg);
    -ms-transform: rotate(90deg);
    transform: rotate(90deg);
}
#levelLabel {
  -webkit-transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
    -o-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    transform: rotate(-90deg);
}

.btn-circle {
  width: 30px;
  height: 30px;
  text-align: center;
  padding: 6px 0;
  font-size: 12px;
  line-height: 1.428571429;
  border-radius: 15px;
}
/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}